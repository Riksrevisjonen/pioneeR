[{"path":"https://riksrevisjonen.github.io/pioneeR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution to pioneeR","title":"Contribution to pioneeR","text":"First , thanks considering contributing pioneeR! goal guide help best contribute development pioneeR. can contribute two ways: File bug report feature request issue Suggest change via pull request","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution to pioneeR","text":"find bug pioneeR, can file issue. Please provide much relevant information can, include minimal reproducible example possible. order make example reproducible, include information required packages, data code. Packages included top script. easiest way include data, use function dput() data object copy result script (remember assign object). Make sure code readable. short possible include comments possible.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contribution to pioneeR","text":"write code make pull request, check issues see already issue related code changes planning. Pay particular attention whether developer already assigned issue. plan contributing existing issue, comment issue maintainers aware upcoming pull requests. plan code, make sure follow style rest package. follow tidyverse style guide exceptions. Always favor native pipe (|>) magrittr one (%>%). commit changes pioneeR follow steps: Clone fork repository make changes new branch. new features functionality, write tests testthat make sure errors warnings run devtools::check(). Add entry NEWS.md concisely describing changed. Push branch GitHub submit pull request. Discuss changes maintainers push changes code. things make easier development team evaluate pull request. Even , may still decide modify code even merge . try responsive provide feedback case decide merge pull request.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ove Haugland Jakobsen. Author, maintainer. Aleksander Eilertsen Valberg. Author. Jan Roar Beckstrøm. Contributor. Lars Skaage Engebretsen. Contributor. Jonas Månsson. Contributor. Joachim Sandnes. Contributor. National Audit Office Norway. Copyright holder.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jakobsen O, Valberg (2024). pioneeR: Productivity Efficiency Analysis using DEA. R package version 0.5.0, https://github.com/Riksrevisjonen/pioneeR, https://riksrevisjonen.github.io/pioneeR/.","code":"@Manual{,   title = {pioneeR: Productivity and Efficiency Analysis using DEA},   author = {Ove Haugland Jakobsen and Aleksander Eilertsen Valberg},   year = {2024},   note = {R package version 0.5.0, https://github.com/Riksrevisjonen/pioneeR},   url = {https://riksrevisjonen.github.io/pioneeR/}, }"},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"pioneer-","dir":"","previous_headings":"","what":"Productivity and Efficiency Analysis using DEA","title":"Productivity and Efficiency Analysis using DEA","text":"R package running Shiny app DEA analysis. Full documentation available GitHub Pages.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Productivity and Efficiency Analysis using DEA","text":"pioneeR can installed CRAN: Installing pioneeR CRAN recommended way. However, want bleeding edge version pioneeR, can install directly GitHub using remotes package: want install specific version pioneeR, can add release version:","code":"install.packages(\"pioneeR\") remotes::install_github(\"riksrevisjonen/pioneeR\") remotes::install_github(\"riksrevisjonen/pioneeR@v0.5.0\")"},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"exporting-reports-as-pdf","dir":"","previous_headings":"Installation","what":"Exporting reports as PDF","title":"Productivity and Efficiency Analysis using DEA","text":"pioneeR supports exporting results DEA analysis PDF report. PDF export function requires installation LaTeX produce PDF. easiest way install LaTeX, use tinytex-package Yihui Xie. Install LaTeX system typing:","code":"install.packages(\"tinytex\") tinytex::install_tinytex()"},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Productivity and Efficiency Analysis using DEA","text":"start pioneeR app, simply type following R console: app start automatically new browser window. default, Shiny start random port number. want start app specific port number, can set port argument. Valid port numbers range 3000 65535: Note Shiny run port numbers Google Chrome considers unsafe. select unsafe port number, port number overridden random port number selected instead. See ?shiny::runApp details.","code":"library(pioneeR) run_pioneer() run_pioneer(port = 3939)"},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"use-a-data-set-from-the-current-session","dir":"","previous_headings":"Getting started","what":"Use a data set from the current session","title":"Productivity and Efficiency Analysis using DEA","text":"already loaded data set current R session, can tell pioneeR use data set app launches. order initialise pioneeR data set, set argument x run_pioneer()-function. argument supports object type data.frame, tbl_df, data.table matrix.","code":"run_pioneer(x = my_data_frame)"},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"save-results-to-the-current-session","dir":"","previous_headings":"Getting started","what":"Save results to the current session","title":"Productivity and Efficiency Analysis using DEA","text":"can write back results analysis current R session. “Analyse”-tab, button quit app return results. button clicked, app close current data set along saved models current model, returned active R session. want capture results object, can initiate app assigning new object:","code":"x <- run_pioneer()"},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"guideline-for-contribution","dir":"","previous_headings":"","what":"Guideline for contribution","title":"Productivity and Efficiency Analysis using DEA","text":"welcome contributions pioneeR package. Please see code conduct detailed guidelines contribute.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"running-pioneer-on-shiny-server","dir":"","previous_headings":"","what":"Running pioneeR on Shiny server","title":"Productivity and Efficiency Analysis using DEA","text":"plan run pioneeR Shiny server, need make separate app file deploy directory Shiny server want run app . Since Shiny server automatically wraps app call runApp(), use run_pioneer() function directly. Instead, need set Shiny app internal server() ui() functions. First, make sure pioneeR package installed server available Shiny server. directory want pioneeR app run , create new file app.R following content: pioneeR now available corresponding URL app directory.","code":"library(pioneeR)  shiny::shinyApp(pioneeR:::ui, pioneeR:::server)"},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Productivity and Efficiency Analysis using DEA","text":"DEA models pioneeR based methods described Peter Bogetoft Lars Otto book Benchmarking DEA, SFA, R (2011). codebase also inspired supplementary R package Benchmarking. implementation Malmquist index based definitions given Intertemporal production frontiers: dynamic DEA Färe Grosskopf (1996). code partly inspired work done K Hervé Dakpo, Yann Desjeux Laure Latruffe R package productivity.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Productivity and Efficiency Analysis using DEA","text":"pioneeR package whole licensed GPLv3.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/bootstrap_dea.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap a DEA model — bootstrap_dea","title":"Bootstrap a DEA model — bootstrap_dea","text":"Run bootstrap DEA model estimate bias corrected efficiency scores confidence intervals.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/bootstrap_dea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap a DEA model — bootstrap_dea","text":"","code":"bootstrap_dea(dea, alpha = 0.05, bw_rule = \"ucv\", iterations = 2000)"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/bootstrap_dea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap a DEA model — bootstrap_dea","text":"dea object class 'pioneer_dea' compute_dea(). alpha One minus confidence level required. Default 0.05. bw_rule string type bandwidth rule used, number bandwidth parameter. See details. iterations number bootstrap iterations perform. Default 2000.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/bootstrap_dea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap a DEA model — bootstrap_dea","text":"list class pioneer_bootstrap.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/bootstrap_dea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bootstrap a DEA model — bootstrap_dea","text":"order bootstrap DEA model, must first create model object using compute_dea() function. Note currently can bootstrap models using constant variable returns scale (RTS). try bootstrap model using another RTS, bootstrap fail error message. bandwidth argument can set either ucv unbiased cross validation, silverman Silverman rule, scott Scott rule. provide number, used directly bandwidth parameter h. can useful replicate results h given, Simar & Wilson (1998). practical applications bootstrap, default value unbiased cross validation sensible.","code":""},{"path":[]},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/bootstrap_dea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap a DEA model — bootstrap_dea","text":"","code":"# Load example data fare89 <- deaR::Electric_plants # Estimate efficiency mod <- compute_dea(   data = fare89,   input = c(\"Labor\", \"Fuel\", \"Capital\"),   output = \"Output\",   id = \"Plant\", ) # Run bootstrap. Reducing the number of iterations to save processing time boot <- bootstrap_dea(mod, iterations = 100) # Print results print(boot) #> Bias corrected efficiency scores: #>  [1] 0.8269453 0.8736980 0.8127673 0.8719568 0.8890060 0.8375015 0.8500982 #>  [8] 0.7802279 0.8216964 0.8063358 0.9197955 0.8638909 0.9169919 0.8069850 #> [15] 0.8723040 0.8281121 0.9070702 0.7872815 0.9089161 # Get summary summary(boot) #> Bootstrap with 100 iterations of DEA model with technology CRS and input oriented efficieny #> Mean bias corrected efficiency: 0.8517 #> Mean bias: 0.045 #> ----------- #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.7802  0.8172  0.8501  0.8517  0.8814  0.9198"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_dea.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute DEA — compute_dea","title":"Compute DEA — compute_dea","text":"Solve input output oriented DEA model constant (crs), variable (vrs), non-increasing (drs), non-decreasing (irs) returns scale.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_dea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute DEA — compute_dea","text":"","code":"compute_dea(   data,   input,   output,   id = NULL,   rts = c(\"crs\", \"vrs\", \"drs\", \"irs\"),   orientation = c(\"in\", \"out\"),   super = FALSE,   slack = FALSE,   peers = FALSE )"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_dea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute DEA — compute_dea","text":"data Dataset analyse. input character vector input variables. output character vector output variables. id Optional. string DMU id name variable. Defaults rownames dataset. rts Returns scale. orientation Model orientation. super TRUE super efficiency scores calculated. slack TRUE slack values calculated. peers TRUE peers added response.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_dea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute DEA — compute_dea","text":"list class pioneer_dea.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_dea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute DEA — compute_dea","text":"","code":"# Load example data fare89 <- deaR::Electric_plants # Estimate efficiency mod <- compute_dea(   data = fare89,   input = c(\"Labor\", \"Fuel\", \"Capital\"),   output = \"Output\",   id = \"Plant\",   rts = \"vrs\",   orientation = \"in\" ) # Print results print(mod) #> Efficiency scores: #>  [1] 0.8691291 1.0000000 1.0000000 0.9306542 1.0000000 0.9071361 0.8909196 #>  [8] 0.8207811 0.8884630 0.8469025 0.9530535 1.0000000 0.9601672 1.0000000 #> [15] 1.0000000 0.8884514 1.0000000 1.0000000 0.9440624 # Get summary summary(mod) #> Technology is VRS and input oriented efficiency #> Mean efficiency: 0.9421 #> ----------- #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  0.8208  0.8897  0.9531  0.9421  1.0000  1.0000  # Convert to data frame df <- as.data.frame(mod)"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_malmquist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Malmquist — compute_malmquist","title":"Compute Malmquist — compute_malmquist","text":"Calculate Malmquist productivity index components using Data Envelopment Analysis.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_malmquist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Malmquist — compute_malmquist","text":"","code":"compute_malmquist(data, input, output, id, time, orientation = c(\"in\", \"out\"))"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_malmquist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Malmquist — compute_malmquist","text":"data Dataset analyse. input character vector input variables. output character vector output variables. id string DMU id name variable. time string time period variable. orientation Model orientation.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_malmquist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Malmquist — compute_malmquist","text":"list class pioneer_mlm","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_malmquist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Malmquist — compute_malmquist","text":"Results returned la Farrell. implies output-oriented models values one signify improvements productivity, values less one imply deterioration productivity. input-oriented models interpretation reversed; values less one denote improvements values one denote deterioration. Note compute_malmquist() works balanced panel datasets.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_malmquist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Malmquist — compute_malmquist","text":"Färe, R., Grosskopf, S. (1996). Intertemporal production frontiers: dynamic DEA. Springer.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_malmquist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Malmquist — compute_malmquist","text":"","code":"# Load example data chnEconomy <- deaR::EconomyLong # Estimate Malmquist mod <- compute_malmquist(   data = chnEconomy,   id = 'DMUs',   time = 'Period',   input = c('Labor', 'Capital'),   output = 'GIOV',   orientation = 'in') # Print results print(mod) #> Malmquist scores: #>   [1]        NA        NA        NA        NA        NA        NA        NA #>   [8]        NA        NA        NA        NA        NA        NA        NA #>  [15]        NA        NA        NA        NA        NA        NA        NA #>  [22]        NA        NA        NA        NA        NA        NA        NA #>  [29]        NA        NA        NA 1.1780355 1.1912934 1.0813121 1.0472603 #>  [36] 1.1889356 1.1408227 1.1046565 1.0830010 1.1459807 1.1000532 1.0661701 #>  [43] 1.1117657 1.0299074 1.1872104 1.0860022 1.1015615 1.1441110 1.0747190 #>  [50] 0.9936366 1.2003931 1.3423497 1.1429375 1.1502118 1.1200655 1.2081663 #>  [57] 1.1379615 1.1576109 1.0796899 1.2619715 1.1855282 1.2366110 1.1565728 #>  [64] 1.0970963 1.1173138 1.1763298 1.3196605 1.1138652 1.2625204 1.0291044 #>  [71] 1.1241910 1.0840453 1.0330009 1.1310008 1.0062198 1.1424261 1.0929556 #>  [78] 1.1937091 1.0970270 1.1369533 1.0519112 1.1012828 1.5496943 1.1418819 #>  [85] 1.1614256 1.1561414 1.0955397 1.1984846 1.1208359 1.2027845 1.2082476 #>  [92] 1.0993345 1.0946658 1.0431310 1.0873712 1.1735938 1.1491537 1.3412337 #>  [99] 1.1211711 1.0718728 1.0882051 1.0406440 0.9959118 1.0073886 1.1391823 #> [106] 1.0554915 1.0020171 1.0578750 1.0327001 1.1369224 1.0580648 1.0306628 #> [113] 1.0985916 1.0755866 1.0608294 1.0741206 1.0227697 1.1345259 1.3148455 #> [120] 1.1169615 1.0026375 1.1976344 1.1254329 1.2062809 1.0862691 0.9835349 #> [127] 0.9625288 0.8754982 1.1542688 1.0372490 1.0822687 0.9523534 0.9860017 #> [134] 1.0378863 0.9392529 1.0341747 0.9656799 1.0530417 1.0015634 0.9421143 #> [141] 0.9678752 1.0176088 0.9487704 1.0296258 1.0024542 1.0332103 1.1219405 #> [148] 1.0403226 0.9929593 1.1341202 1.0401633 0.9538121 0.9584683 0.9822538 #> [155] 0.9254895 # Get summary summary(mod) #> Mean malmquist: 1.0974 #> ----------- #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>  0.8755  1.0332  1.0951  1.0974  1.1446  1.5497      31  # Convert to data frame df <- as.data.frame(mod)"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_scale_efficiency.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate scale efficiency — compute_scale_efficiency","title":"Calculate scale efficiency — compute_scale_efficiency","text":"Calculate scale efficiency set inputs outputs return data.frame","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_scale_efficiency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate scale efficiency — compute_scale_efficiency","text":"","code":"compute_scale_efficiency(x, y, orientation = c(\"in\", \"out\"), digits = NULL)"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_scale_efficiency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate scale efficiency — compute_scale_efficiency","text":"x matrix inputs, created create_matrix y matrix outputs, created create_matrix orientation input oriented models output oriented digits integer number digits round . NULL values kept unrounded.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_scale_efficiency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate scale efficiency — compute_scale_efficiency","text":"data frame containing efficiency scores CRS, VRS, Scale Efficiency, VRS NIRS ratio, recommendation whether increase decrease size DMU.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/compute_scale_efficiency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate scale efficiency — compute_scale_efficiency","text":"","code":"# Create matrices with random values inputs <- matrix(runif(10, 1, 10), ncol = 2) outputs <- matrix(runif(10, 1, 10), ncol = 2) # Compute scale efficiency res <- compute_scale_efficiency(   inputs, outputs, orientation = 'out', digits = 2)"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/create_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a matrix for input or output variables — create_matrix","title":"Create a matrix for input or output variables — create_matrix","text":"Create matrix input output variables can used DEA models supplied data.frame","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/create_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a matrix for input or output variables — create_matrix","text":"","code":"create_matrix(df, columns, id, normalize = FALSE)"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/create_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a matrix for input or output variables — create_matrix","text":"df data.frame containing data. columns character vector column names include matrix. id character string specifying column DMU IDs. normalize logical indicating whether normalize columns mean. Defaults FALSE.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/create_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a matrix for input or output variables — create_matrix","text":"matrix inputs outputs","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/create_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a matrix for input or output variables — create_matrix","text":"","code":"df <- data.frame(id = 1:3, a = c(10, 20, 30), b = c(5, 15, 25)) create_matrix(df, columns = c(\"a\", \"b\"), id = \"id\", normalize = TRUE) #>     a         b #> 1 0.5 0.3333333 #> 2 1.0 1.0000000 #> 3 1.5 1.6666667"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/run_pioneer.html","id":null,"dir":"Reference","previous_headings":"","what":"Run pioneeR — run_pioneer","title":"Run pioneeR — run_pioneer","text":"Run pioneeR app local machine.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/run_pioneer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run pioneeR — run_pioneer","text":"","code":"run_pioneer(x = NULL, port = NULL, ...)"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/run_pioneer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run pioneeR — run_pioneer","text":"x data frame loaded app. See details. port Integer. TCP port application listen . ... arguments send shiny::runApp().","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/run_pioneer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run pioneeR — run_pioneer","text":"None","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/run_pioneer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run pioneeR — run_pioneer","text":"Note pioneeR must loaded namespace library(pioneeR) run pioneeR app. can load data object current environment app. can pass data frame character string object name data frame want loaded app launches. Note use data frame objects. tibble (tidyverse) data table, can convert ordinary data.frame using .data.frame()","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/run_pioneer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run pioneeR — run_pioneer","text":"","code":"# Only run this example in interactive R sessions if (interactive()) {   df = deaR::Electric_plants   # Load app with data.frame and set port to 8080   run_pioneer(x = df, port = 8080) }"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/summary_tbl_dea.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary table for DEA — summary_tbl_dea","title":"Create a summary table for DEA — summary_tbl_dea","text":"Create binned summary table efficiency scores DEA model.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/summary_tbl_dea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary table for DEA — summary_tbl_dea","text":"","code":"summary_tbl_dea(x)"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/summary_tbl_dea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary table for DEA — summary_tbl_dea","text":"x numeric vector efficiency scores object class pioneer_dea","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/summary_tbl_dea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary table for DEA — summary_tbl_dea","text":"data.frame() summary statistics","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/summary_tbl_dea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a summary table for DEA — summary_tbl_dea","text":"function return summary table efficiency scores DEA model. Efficiency scores placed 11 bins, DMUs efficiency score equal 1 placed separate bin. output oriented models range [1, Inf], bins created 1/bin. Bin widths equal models range [0, 1].","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/summary_tbl_dea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary table for DEA — summary_tbl_dea","text":"","code":"# Load example data fare89 <- deaR::Electric_plants # Estimate efficiency mod <- compute_dea(   data = fare89,   input = c(\"Labor\", \"Fuel\", \"Capital\"),   output = \"Output\",   rts = \"vrs\" ) # Get a summary table of efficiency scores summary_tbl_dea(mod) #>             Range Frequency #> 1    0 <= E < 0.1         0 #> 2  0.1 <= E < 0.2         0 #> 3  0.2 <= E < 0.3         0 #> 4  0.3 <= E < 0.4         0 #> 5  0.4 <= E < 0.5         0 #> 6  0.5 <= E < 0.6         0 #> 7  0.6 <= E < 0.7         0 #> 8  0.7 <= E < 0.8         0 #> 9  0.8 <= E < 0.9         6 #> 10   0.9 <= E < 1         5 #> 11         E == 1         8 # You can also create the table from a numeric vector of efficiency scores res <- as.data.frame(mod) summary_tbl_dea(res$efficiency) #>             Range Frequency #> 1    0 <= E < 0.1         0 #> 2  0.1 <= E < 0.2         0 #> 3  0.2 <= E < 0.3         0 #> 4  0.3 <= E < 0.4         0 #> 5  0.4 <= E < 0.5         0 #> 6  0.5 <= E < 0.6         0 #> 7  0.6 <= E < 0.7         0 #> 8  0.7 <= E < 0.8         0 #> 9  0.8 <= E < 0.9         6 #> 10   0.9 <= E < 1         5 #> 11         E == 1         8"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/unset_env_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Unset environment variables — unset_env_vars","title":"Unset environment variables — unset_env_vars","text":"Unsets environment variables set pioneeR","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/unset_env_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unset environment variables — unset_env_vars","text":"","code":"unset_env_vars()"},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/unset_env_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unset environment variables — unset_env_vars","text":"logical vector, elements TRUE unsetting variable succeeded","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/reference/unset_env_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unset environment variables — unset_env_vars","text":"","code":"unset_env_vars()"},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"pioneer-050","dir":"Changelog","previous_headings":"","what":"pioneeR 0.5.0","title":"pioneeR 0.5.0","text":"CRAN release: 2024-10-25","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"breaking-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"pioneeR 0.5.0","text":"Results Malmquist index now returned ala Farrell (Shephard). consistent results models currently presented app. Users note changes interpretation malmquist index input-oriented models. See ?compute_malmquist() details. (#81) Removed select input box returns scale Malmquist analysis tab. currently supported Malmquist index one defined Färe & Grosskopf (1996). Components index thus always computed based returns scale (either CRS VRS depending specific component), select input box needed. runPioneeR() removed avoid confusion new users release CRAN.","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"enhancements-0-5-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"pioneeR 0.5.0","text":"Added new exported function, compute_malmquist() calculating productivity. also removes need {productivity} dependency. (#81) sub-components Malmquist index, including bias technical change scale efficiency change, added results Malmquist analysis tab. (#81) Added caching bootstrap function app (#88) warning now generated power analysis low DMUs added robust results (#83)","code":""},{"path":[]},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"pioneeR 0.4.0","text":"pioneeR now depends bslib 0.6.0 higher (#73) summary_tbl_dea() longer supports Farell-type objects {Benchmarking} package (#104)","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"changes--improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"Changes & improvements","title":"pioneeR 0.4.0","text":"Updated documentation run_pioneer() Added new package logo (#21) Added custom functions DEA calculations order remove {Benchmarking} dependency (#80) Added new exported functions calculating, bootstraping DEA models, compute_dea() bootstrap_dea() (#80, #93) R functions - including server() ui() - moved R directory benefits internal functions accessed. addition, global environment untouched app run (#87)","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"pioneeR 0.4.0","text":"Fixed bug checkbox timeseries available data uploaded (#74) Fixed bugs UI correctly reflect user supplied input rounding (#84)","code":""},{"path":[]},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"pioneeR 0.3.0","text":"pioneeR now depends bslib 0.5.1 higher. Version 0.6.0 higher recommended, support version 0.5.1 deprecated next release","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"pioneeR 0.3.0","text":"Added new boostrap functionality models constant variable returns scale based Simar Wilson (1998) (#6) Added new function unset_env_vars() clear environment variables set pioneeR app exits unexpectedly variables unset automatically Added new function compute_scale_efficiency() run CRS, VRS NIRS models compute scale efficiency evaluate optimal scale size unit Added new function summary_tbl_dea() create summary table efficiency scores vector efficiency scores object type Farrell returned dea() function Benchmarking package Added new helper function create_matrix() create matrix input values output values based data.frame","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"pioneeR 0.3.0","text":"Layout changed layout_sidebar() bslib package improve UI fix compatability bslib >= 0.6.0 Boostrap 5.3 (#44) Analysis report updated simplified make results app easier reproduce (#35) runPioneeR() renamed run_pioneer(). runPioneeR() still work, deprecated later version Improvements user interface user experience (#57) time series data, columns now available select year/time variable. column values within range [1900, 2100] exists, column automatically selected (#41)","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"pioneeR 0.3.0","text":"user selects port number considered unsafe, random port number selected instead (#40) Fixed bug error occurred model parameters found column names (#39) Fixed bug scale efficiency tab numbers rounded twice (#47) Fixed bug block Excel-files properly uploading (#71)","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"pioneer-020","dir":"Changelog","previous_headings":"","what":"pioneeR 0.2.0","title":"pioneeR 0.2.0","text":"Added ability provide data app runPioneer() Added ability return data app closes Fixed bug Malmquist tab show results analysis (#36)","code":""},{"path":"https://riksrevisjonen.github.io/pioneeR/news/index.html","id":"pioneer-010","dir":"Changelog","previous_headings":"","what":"pioneeR 0.1.0","title":"pioneeR 0.1.0","text":"First public release","code":""}]
